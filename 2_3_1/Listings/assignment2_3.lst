


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             ARMex, CODE, READONLY ;Assignme
                                                            nt3 using Loop
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E3A00001        MOV              r0, #1
    5 00000004 E59F1038        LDR              r1, Address1 ;Address to store
    6 00000008         
    7 00000008 E1A02000        MOV              r2, r0      ;r2 = 0001
    8 0000000C E0822080        ADD              r2, r2, r0, LSL #1 ;r2 = 0001 +
                                                             0010 = 0011
    9 00000010 E0822180        ADD              r2, r2, r0, LSL #3 ;r2 = 0001 +
                                                             0010 + 1000 = 1011
                                                             
   10 00000014         
   11 00000014         
   12 00000014 E1A04000        MOV              r4, r0      ;r4 = 00001
   13 00000018 E0844100        ADD              r4, r4, r0, LSL #2 ;r4 = 00001 
                                                            + 00100 = 00101
   14 0000001C E0844180        ADD              r4, r4, r0, LSL #3 ;r4 = 00001 
                                                            + 00100 + 01000 = 0
                                                            1101
   15 00000020 E0844200        ADD              r4, r4, r0, LSL #4 ;r4 = 00001 
                                                            + 00100 + 01000 + 1
                                                            0000 = 11101
   16 00000024         
   17 00000024 E3A03000        MOV              r3, #0
   18 00000028         
   19 00000028         Loop
   20 00000028 E0833002        ADD              r3, r2      ;r3 = r3 + r2
   21 0000002C         
   22 0000002C E1520004        CMP              r2, r4      ;if(r2 != 29) r2 = 
                                                            r2+2 and Loop / els
                                                            e goto Endline
   23 00000030 10822080        ADDNE            r2, r0, LSL #1
   24 00000034 1AFFFFFB        BNE              Loop
   25 00000038 0AFFFFFF        BEQ              Endline
   26 0000003C         
   27 0000003C         
   28 0000003C         Endline
   29 0000003C E5813000        STR              r3, [r1]    ;Store Data
   30 00000040 E1A0F00E        MOV              pc, lr
   31 00000044         
   32 00000044 00004000 
                       Address1
                               DCD              &4000       ;Address to store a
                                                            rray
   33 00000048         
   34 00000048                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\assignment2_3.d -o.\objects\assignment2_3.o -IC:\Keil_v5\ARM
\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefin
e="__UVISION_VERSION SETA 521" --list=.\listings\assignment2_3.lst assignment2_
3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARMex 00000000

Symbol: ARMex
   Definitions
      At line 1 in file assignment2_3.s
   Uses
      None
Comment: ARMex unused
Address1 00000044

Symbol: Address1
   Definitions
      At line 32 in file assignment2_3.s
   Uses
      At line 5 in file assignment2_3.s
Comment: Address1 used once
Endline 0000003C

Symbol: Endline
   Definitions
      At line 28 in file assignment2_3.s
   Uses
      At line 25 in file assignment2_3.s
Comment: Endline used once
Loop 00000028

Symbol: Loop
   Definitions
      At line 19 in file assignment2_3.s
   Uses
      At line 24 in file assignment2_3.s
Comment: Loop used once
4 symbols
336 symbols in table
